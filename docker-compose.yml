version: "1.0.2"

services:
  api:
    container_name: api
    restart: always
    build: api
    env_file: .env
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
        restart: true
    ports:
      - 3000:3000

  worker:
    container_name: worker
    restart: always
    build: worker
    env_file: .env
    volumes:
      - ./worker:/app
      - /app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    container_name: rabbitmq
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    environment:
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 15672:15672
      - 5672:5672
